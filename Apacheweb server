
			APACHE INSTALLATION


sudo apt update
sudo apt install apache2
systemctl start apache2
systemctl status apache2
systemctl enable apache2


cd /var/www/
vi index.html
Make sure the path in the virtual host DocumentRoor path is same or not
We can also make our own directories and files 
mkdir webserver1.com
cd webserver1.com
vi index.html
chmod 755 index.html

We have two types of Hosting our webserver:

1. IP Based Hosting 
	IP BasedHosting is to host the webserver with IP Address, but it require multiple vIP's or Multiple Ips in realtime.
2. Name Based hosting
	Name Based Hosting hosts the webservers with the domain names, we only require one IP with that we can host multiple Domains.

To make the Virtual Host based Hosting:

cd /etc/apache2/sitesavailable
vi 000-default.conf		(This is the Default conf. file and in your case you can give anyname.conf)

Change the file contents:

<VirtualHost *:80>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin root@localhost
        DocumentRoot /var/www/webserver1.com/
        serverAlias www.webserver1.com
        servername webserver1.com
        Redirect permanent / http://webserver2.com/
        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

we have two commands to host a site(a2ensite) and disable a host(s2dissite)

a2ensite webserver1.com

to disable 

a2dissite webserver1.com

To redirect from one URL to another
ADD line in file /etc/apache2/sitesavailable/webserver1.com.conf 

 ServerAdmin root@localhost
 DocumentRoot /var/www/webserver1.com/
 serverAlias www.webserver1.com
 servername webserver1.com
 Redirect permanent / http://webserver2.com/
 
 systemctl restart apache2
 
 Add the domain names in /etc/hosts file
 10.10.10.151  webserver1.com
 10.10.10.151  webserver2.com
 
 systemctl restart apache2
 
 http://webserver1.com
 
 for Redirection if we hit  http://www.webserver1.com then it should Redirect to http://www.webserver1.com



 
=========================================================== 
 SSL(HTTPS)
============================================================ 
 
 
 
 sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt
 
 sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048


sudo nano /etc/apache2/conf-available/ssl-params.conf



# from https://cipherli.st/
# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html

SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
SSLProtocol All -SSLv2 -SSLv3
SSLHonorCipherOrder On
# Disable preloading HSTS for now.  You can use the commented out header line that includes
# the "preload" directive if you understand the implications.
#Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains"
Header always set X-Frame-Options DENY
Header always set X-Content-Type-Options nosniff
# Requires Apache >= 2.4
SSLCompression off
SSLSessionTickets Off
SSLUseStapling on
SSLStaplingCache "shmcb:logs/stapling-cache(150000)"

SSLOpenSSLConfCmd DHParameters "/etc/ssl/certs/dhparam.pem"





sudo cp /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-available/default-ssl.conf.bak

sudo nano /etc/apache2/sites-available/default-ssl.conf

<IfModule mod_ssl.c>
        <VirtualHost _default_:443>
                ServerAdmin your_email@example.com
                ServerName server_domain_or_IP

                DocumentRoot /var/www/html

                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/access.log combined

                SSLEngine on

                SSLCertificateFile      /etc/ssl/certs/apache-selfsigned.crt
                SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key

                <FilesMatch "\.(cgi|shtml|phtml|php)$">
                                SSLOptions +StdEnvVars
                </FilesMatch>
                <Directory /usr/lib/cgi-bin>
                                SSLOptions +StdEnvVars
                </Directory>

                BrowserMatch "MSIE [2-6]" \
                               nokeepalive ssl-unclean-shutdown \
                               downgrade-1.0 force-response-1.0

        </VirtualHost>
		
</IfModule>


sudo nano /etc/apache2/sites-available/000-default.conf


<VirtualHost *:80>
        . . .

        Redirect "/" "https://your_domain_or_IP/"

        . . .
</VirtualHost>

for permanent Redirect,
<VirtualHost *:80>
        . . .

        Redirect permanent "/" "https://your_domain_or_IP/"

        . . .
</VirtualHost>


sudo ufw app list

sudo ufw status

sudo ufw allow 'Apache Full'

sudo ufw delete allow 'Apache'

sudo a2enmod ssl

sudo a2enmod headers

sudo a2ensite default-ssl

sudo a2enconf ssl-params

sudo apache2ctl configtest

sudo systemctl restart apache2


https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-apache-in-ubuntu-20-04

https://www.tutorialsteacher.com/https/ssl-certificate-format
