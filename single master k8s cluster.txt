	
								
								
														Kubernetes cluster creation


	In order to create the kubernetes cluster, we have follow some of the prequesties to create a k’8s cluster.
	prerequisties: 
	for master: 
		2GB RAM (min.)
		2 Cores CPU(min.)
	for slave: 
		1GB RAM(min.)
		1 Core CPU (min.)

Installation steps:
	At master and node (Do the same process for both master and node only network differs master and node )		
		The Installation process will be same for both master and slave 
				
			- Update the repository
			- Turn off swap space
			- Update Hostname, Hosts & Set Static IP
			- Install Open SSH server and Docker
			- Install kubeadm, kubectl and kubelet
	After this process, on master and node , go to the master and 

				Initiate Kubernetes Cluster 
	`			install the pod network
				setup the kubernetes dashboard
commands:
		
Update the repo,
		sudo yum update or apt-get update

Turnoff the swap space,
		swapoff -a	
Go the fstab file in path /etc/fstab and disbale the UUID,

# UUID=26620198-186a-404b-b9a1-12d957d7c826     /           xfs    defaults,noatime  1   1
	- check the swap memory is disabled or not with,
		free -h
 edit the hostname in path /etc/hostname and add the master name,
			sudo /etc/hostname 
			
 edit the hosts file and add the ip of the master and nodes and hostnames and viceversa
			sudo /etc/hosts,  mention as below: 
	127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
	::1         localhost6 localhost6.localdomain6
	172.31.32.11         k8master
	172.31.13.123       node1
	172.31.5.72           node2




create the kubernetes repo in path /etc/yum.repos.d/kubernetes.repo to get the kubernetes packages from the repo and add  the following lines in that file,
		
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

		
Upgrade the ip tables in the file, 


				sudo sh -c "echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables"
				sudo sh -c "echo '1' > /proc/sys/net/ipv4/ip_forward"
	check with command, 
			sysctl --system
			sudo modprobe br_netfilter
Install the kubeadm, kubectl, kubelet and docker the master and even in the node machine,
			yum install kubeadm kubelet kubectl docker
Start and enable the kubelet service and docker (docker daemon)service,
		for i in docker kubelet 
		> do 				
		> systemctl start $i		(or) 		 systemctl start kubelet docker
		> systemctl enable $i				 systemctl enable kubelet docker
		> done 
	
Initialize the cluster in the master,
kubeadm init –pod-network-cidr=172.30.0.0/16

To start using your cluster, you need to run the following as a regular user:
  mkdir -p $HOME/.kube
  	  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
              sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  	export KUBECONFIG=/etc/kubernetes/admin.conf
A Pod Network allows nodes within the cluster to communicate. 
There are several available Kubernetes networking options. Use the following command to install the flannel pod network add-on:

sudo kubectl apply
-f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

Check the status of the nodes,
sudo kubectl get nodes
Once a pod network has been installed, you can confirm that it is working by checking that the CoreDNS pod is running by typing:
sudo kubectl get pods –all-namespaces




Repeat the same installation process in the nodes and while initialisation of kubenetes in the master you’ll the statement like shown below,
use the link and copy and paste in node machine to join into the cluster. 

kubeadm join 172.31.32.11:6443 --token 0gtf3i.2yxe1httf05nw6mv \
	--discovery-token-ca-cert-hash sha256:d2bd7748326f93c078e540258a1cde35f2b464b7261654f9b03e413a78135120kubeadm join 172.31.32.11:6443 --token 0gtf3i.2yxe1httf05nw6mv –discovery-token-ca-cert-hash sha256:d2bd7748326f93c078e540258a1cde35f2b464b7261654f9b03e413a78135120
	
	
	
	
	
	
	
	
	IF ANY ERROR FOR KUBELET
	
 mkdir -p /etc/systemd/system/kubelet.service.d
 touch /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
 
echo "Environment="KUBELET_SYSTEM_PODS_ARGS=--pod-manifest-path=/etc/kubernetes/manifests --allow-privileged=true --fail-swap-on=false" " > /etc/systemd/system/kubelet.service.d/10-kubeadm.conf




OR


vim /usr/lib/systemd/system/kubelet.service

[Unit]
Description=Kubernetes Kubelet Server
Documentation=https://github.com/GoogleCloudPlatform/kubernetes
After=docker.service
Requires=docker.service

[Service]
WorkingDirectory=/var/lib/kubelet
EnvironmentFile=-/etc/kubernetes/config
EnvironmentFile=-/etc/kubernetes/kubelet
ExecStart=/usr/bin/kubelet \
        $KUBE_LOGTOSTDERR \
        $KUBE_LOG_LEVEL \
        $KUBELET_API_SERVER \
        $KUBELET_ADDRESS \
        $KUBELET_PORT \
        $KUBELET_HOSTNAME \
        $KUBE_ALLOW_PRIV \
        $KUBELET_ARGS
Restart=on-failure
KillMode=process

[Install]
WantedBy=multi-user.target










 63  cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

    yum install -y kubelet kubeadm kubectl
   systemctl enable kubelet
    systemctl start kubelet
    systemctl status kubelet
    sudo firewall-cmd --permanent --add-port=6443/tcp
     sudo firewall-cmd --permanent --add-port=2379-2380/tcp
     sudo firewall-cmd --permanent --add-port=10250/tcp
    sudo firewall-cmd --permanent --add-port=10251/tcp
    sudo firewall-cmd --permanent --add-port=10252/tcp
     sudo firewall-cmd --permanent --add-port=10255/tcp
   sudo firewall-cmd --reload
     yum install firewalld
     systemctl start firewalld
     sudo firewall-cmd --permanent --add-port=6443/tcp
    sudo firewall-cmd --permanent --add-port=2379-2380/tcp
    sudo firewall-cmd --permanent --add-port=10250/tcp
     sudo firewall-cmd --permanent --add-port=10251/tcp
     sudo firewall-cmd --permanent --add-port=10252/tcp
     sudo firewall-cmd --permanent --add-port=10255/tcp
     sudo firewall-cmd --reload
     cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

    sysctl --system
   sudo setenforce 0
    sudo sed -i ‘s/^SELINUX=enforcing$/SELINUX=permissive/’ /etc/selinux/config
    sudo sed -i '/swap/d' /etc/fstab
     sudo swapoff -a
   sudo kubeadm init --pod-network-cidr=10.244.0.0/16






https://devopscube.com/setup-kubernetes-cluster-kubeadm/
https://blog.inkubate.io/install-and-configure-a-multi-master-kubernetes-cluster-with-kubeadm/













================================================================================
TROUBLESHOOTING
================================================================================

ERROR:
#kubectl get pods
 Unable to connect to the server: x509: certificate is valid for 10.96.0.1, 10.0.1.252, not 10.0.1.253

RESOLUTION:
 rm $HOME/.kube/* -rf
 cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
 chown $(id -u):$(id -g) $HOME/.kube/config
